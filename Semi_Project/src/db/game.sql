DROP TABLE USERS;
DROP TABLE REVIEW;
DROP TABLE GAME;
DROP TABLE URL;

DROP SEQUENCE USER_NO;
DROP SEQUENCE GAME_NO;
DROP SEQUENCE RV_NO;
DROP SEQUENCE URL_GAME_NO;

CREATE SEQUENCE USER_NO NOCACHE;
CREATE SEQUENCE GAME_NO NOCACHE;
CREATE SEQUENCE RV_NO NOCACHE;
CREATE SEQUENCE URL_GAME_NO;

CREATE TABLE USERS (
      USER_NO NUMBER PRIMARY KEY,
      USER_ID VARCHAR2(50) UNIQUE NOT NULL,
      USER_PW VARCHAR2(50) NOT NULL,
      USER_NAME VARCHAR2(50) NOT NULL,
      USER_EMAIL VARCHAR2(50) UNIQUE NOT NULL,
      USER_ENABLED VARCHAR2(2) NOT NULL,
      USER_COUNT NUMBER NOT NULL,
      USER_IMAGE VARCHAR2(4000),
   CONSTRAINT USER_ENABLED_CHK CHECK( USER_ENABLED IN ('Y', 'N'))
);

SELECT * FROM USERS;
SELECT USER_NO, USER_IMAGE FROM USERS WHERE USER_ID='아이디1'
DELETE FROM USERS WHERE USER_NO = 1;

INSERT INTO USERS VALUES
(USER_NO.NEXTVAL , '아이디1' , '1234' , '김승진' , '123@123' , 'Y' , 2 , '1_user_img');

INSERT INTO USERS VALUES
(USER_NO.NEXTVAL , '아이디2' , '1234' , '이진호' , '124@123' , 'Y' , 0 , '2_user_img');

INSERT INTO USERS VALUES
(USER_NO.NEXTVAL , '아이디3' , '1234' , '장동건' , '125@123' , 'Y' , 0 , '3_user_img');

INSERT INTO USERS VALUES
(USER_NO.NEXTVAL , '아이디4' , '1234' , '김소연' , '126@123' , 'Y' , 0 , '4_user_img');

INSERT INTO USERS VALUES
(USER_NO.NEXTVAL , '아이디5' , '1234' , '한예인' , '127@123' , 'Y' , 0 , '5_user_img');

INSERT INTO USERS VALUES
(USER_NO.NEXTVAL , '아이디6' , '1234' , '권궁' , '128@123' , 'Y' , 0 , '6_user_img');


SELECT ROWNUM, A.* FROM (SELECT USER_NAME , USER_NO , USER_IMAGE FROM USERS ORDER BY USER_COUNT DESC) A WHERE ROWNUM <= 6

CREATE TABLE REVIEW (
   RV_NO NUMBER PRIMARY KEY,
   RV_USER_ID VARCHAR2(50) NOT NULL,
   RV_GAME_NO NUMBER NOT NULL,
   RV_STAR NUMBER NOT NULL,
   RV_CONTENT VARCHAR2(100) NOT NULL,
   RV_DATE DATE,
   RV_PLATFORM NUMBER
);
select * from review;


INSERT INTO REVIEW VALUES
(RV_NO.NEXTVAL , '아이디1' , 1 , 2 , 'TEST' , SYSDATE , 2 );

INSERT INTO REVIEW VALUES
(RV_NO.NEXTVAL , '아이디1' , 2 , 2 , 'TEST2' , SYSDATE , 2 );

INSERT INTO REVIEW VALUES
(RV_NO.NEXTVAL , '아이디1' , 3 , 2 , 'TEST3' , SYSDATE , 2 );

INSERT INTO REVIEW VALUES
(RV_NO.NEXTVAL , '아이디1' , 4 , 2 , 'TEST4' , SYSDATE , 2 );

INSERT INTO REVIEW VALUES
(RV_NO.NEXTVAL , '아이디1' , 5 , 2 , 'TEST5' , SYSDATE , 2 );

INSERT INTO REVIEW VALUES
(RV_NO.NEXTVAL , '아이디1' , 6 , 4 , 'TEST6' , SYSDATE , 2 );

CREATE TABLE GAME(
   GAME_NO NUMBER PRIMARY KEY,
   GAME_STARAVG NUMBER,
   GAME_PLATFORM NUMBER CHECK (GAME_PLATFORM IN ('1', '2', '3', '4')),
   GAME_NAME VARCHAR2(4000),
   GAME_COMPANY VARCHAR2(4000),
   GAME_GENRE NUMBER,
   GAME_RELEASE DATE,
   GAME_CONTENT VARCHAR2(4000)
);


CREATE TABLE URL(
   URL_GAME_NO NUMBER PRIMARY KEY,
   MAIN_IMAGE VARCHAR2(4000),
   IMAGE1 VARCHAR2(4000),
   IMAGE2 VARCHAR2(4000),
   IMAGE3 VARCHAR2(4000),
   IMAGE4 VARCHAR2(4000),
   VIDEO1 VARCHAR2(4000),
   VIDEO2 VARCHAR2(4000),
   VIDEO3 VARCHAR2(4000),
   VIDEO4 VARCHAR2(4000),
   VIDEO_IMAGE1 VARCHAR2(4000),
   VIDEO_IMAGE2 VARCHAR2(4000),
   VIDEO_IMAGE3 VARCHAR2(4000),
   VIDEO_IMAGE4 VARCHAR2(4000),
   VIDEO_TITLE1 VARCHAR2(1000),
   VIDEO_TITLE2 VARCHAR2(1000),
   VIDEO_TITLE3 VARCHAR2(1000),
   VIDEO_TITLE4 VARCHAR2(1000),
   ARTICLE1 VARCHAR2(4000),
   ARTICLE2 VARCHAR2(4000),
   ARTICLE3 VARCHAR2(4000),
   A_IMAGE1 VARCHAR2(500),
   A_IMAGE2 VARCHAR2(500),
   A_IMAGE3 VARCHAR2(500),
   ARTICLE_TITLE1 VARCHAR2(2000),
   ARTICLE_TITLE2 VARCHAR2(2000),
   ARTICLE_TITLE3 VARCHAR2(2000),
   ARTICLE_SUMMARY1 VARCHAR2(2000),
   ARTICLE_SUMMARY2 VARCHAR2(2000),
   ARTICLE_SUMMARY3 VARCHAR2(2000),
   PACKAGE_IMG VARCHAR2(500),
   CONSTRAINT GAME_NO_FK FOREIGN KEY (URL_GAME_NO) REFERENCES GAME(GAME_NO)
);


CREATE TABLE M_CONTENT (
	M_GAME_NO NUMBER PRIMARY KEY,
	GAME_PLATFORM NUMBER CHECK (GAME_PLATFORM IN ('1', '2', '3', '4')),
	M_GAME_NAME VARCHAR2(500),
	M_GAME_COMPANY VARCHAR2(1000),
	M_GAME_SUMMARY VARCHAR2(2000),
	M_GAME_SLIDEIMAGE VARCHAR2(500),
	M_GAME_IMAGE VARCHAR2(500)
);

DROP TABLE M_CONTENT;

SELECT * FROM USERS;
SELECT * FROM REVIEW;
SELECT * FROM GAME;
SELECT * FROM URL;
SELECT * FROM M_CONTENT;

SELECT * FROM GAME , M_CONTENT WHERE M_GAME_NO = GAME_NO;

select * from game where game_no = 2;


SELECT * FROM USERS U FULL OUTER JOIN REVIEW R ON U.USER_ID = R.RV_USER_ID FULL OUTER JOIN 
GAME G ON R.RV_GAME_NO = G.GAME_NO FULL OUTER JOIN URL M ON G.GAME_NO = M.URL_GAME_NO WHERE USER_NO= 1;


select count(*) from review where rv_platform =2

select count(*) from review where rv_platform =2

SELECT ROWNUM AS row_num,RV_NO,GAME_NAME, RV_STAR, RV_CONTENT,RV_PLATFORM ,RV_DATE  FROM REVIEW A FULL OUTER JOIN GAME B ON A.RV_GAME_NO = B.GAME_NO FULL OUTER JOIN USERS C ON A.RV_USER_ID = C.USER_ID WHERE GAME_PLATFORM=2 AND USER_ID = '아이디5'



select * from users;

SELECT RV_NO,GAME_NAME, RV_STAR, RV_CONTENT, USER_ID  FROM REVIEW A  FULL OUTER JOIN GAME B ON A.RV_GAME_NO = B.GAME_NO FULL OUTER JOIN USERS C  ON A.RV_USER_ID = C.USER_ID WHERE GAME_PLATFORM=1 AND GAME_PLATFORM = RV_PLATFORM AND USER_ID = '아이디5' AND RV_NO IS NOT NULL ORDER BY RV_NO

SELECT * FROM REVIEW WHERE RV_GAME_NO = 2;

SELECT * FROM GAME;